version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - WDS_SOCKET_PORT=0
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      - user-management
      - recommendation-engine
      - scraping-service

  user-management:
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./services/user-management:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password@mongodb:27017
      - REDIS_URI=redis://redis:6379
      - JWT_SECRET=your-secret-key
      - PORT=4000
    depends_on:
      - mongodb
      - redis

  deck-analysis:
    build:
      context: ./services/deck-analysis
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    volumes:
      - ./services/deck-analysis:/app
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017
    depends_on:
      - mongodb

  recommendation-engine:
    build:
      context: ./services/recommendation-engine
      dockerfile: Dockerfile
    ports:
      - "4002:4002"
    volumes:
      - ./services/recommendation-engine:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password@mongodb:27017
      - REDIS_URL=redis://redis:6379
      - PORT=4002
      - ALLOWED_ORIGINS=http://localhost:3000
    depends_on:
      - mongodb
      - redis

  scraping-service:
    build:
      context: ./services/scraping-service
      dockerfile: Dockerfile
    ports:
      - "4003:4003"
    volumes:
      - ./services/scraping-service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password@mongodb:27017
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mongodb_data:
  redis_data:
